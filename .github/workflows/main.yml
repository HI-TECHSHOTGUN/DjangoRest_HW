name: Django CI/CD

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ghcr.io/hi-techshotgun/djangorest_hw

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
    - name: 1. Клонирование репозитория
      uses: actions/checkout@v4

    - name: 2. Установка Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: 3. Установка Poetry
      run: pipx install poetry

    - name: 4. Установка зависимостей проекта
      run: poetry install --no-interaction --no-root

    - name: 5. Запуск тестов
      env:
        SECRET_KEY: "dummy-secret-key-for-testing"
        POSTGRES_PASSWORD: "dummy_password"
        STRIPE_API_KEY: "dummy_stripe_api_key"
        STRIPE_PUBLISHABLE_KEY: "dummy_stripe_publishable_key"
        EMAIL_HOST_PASSWORD: "dummy_email_password"

        DEBUG: "False"

        POSTGRES_DB: "test_db"
        POSTGRES_USER: "test_user"
        POSTGRES_HOST: "localhost"
        PORT: "5432"

        REDIS_URL: "redis://localhost:6379"

        EMAIL_HOST: "localhost"
        EMAIL_PORT: "1025"
        EMAIL_USE_TLS: "False"
        EMAIL_USE_SSL: "False"
        EMAIL_HOST_USER: "test@example.com"
      run: |
        poetry run python manage.py test

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}

          script: |
            cd ~/DjangoRest_HW

            git fetch --all
            git reset --hard origin/main

            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker pull ${{ env.IMAGE_NAME }}:latest

            docker-compose up -d

            docker image prune -f
